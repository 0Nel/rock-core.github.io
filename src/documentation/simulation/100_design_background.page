---
title: Design Background 
sort_info: 100 
---

The General design of the Mars Integration of Rock follows the Component based design idea.
Each Rock-Task is a [MarsPlugin](http://rock-robotics.org/stable/api/simulation/mars/doc/d8/dd8/tutorial_basic_plugin.html)
this Provides low-level access to the underlaying Simulation instances. Another 
benifit is the Syncronized access to to the datastruures without a need for
locking. 

***Important***: The Drawback on this Approach is that all Simulation tasks needs to be in 
the same deployment. The MarsPlugin uses here a Singleton Design pattern.{: .warning}

Each plugin provies the Functionality that on a real system would provided by the real Hardware.
This could be a actuator driver, IMU, Sonar, Laserscanner and so on. Because of this clear separation
the simulation could be directly exchanged by the real robot and vice-versa. The Simulation Plugins
provides the Same functionality as the real-drivers. The same data-types are used. This makes
the sitch between the Simulation and the real robot for Rock-Users smooth.

Neverthelss there are of course specific modules that provides mixed functionalities or 
provides additional or even reduced functionality depending on the capabilities of the 
simulated device, and the need for abstraction. Neverthelss the approach is to keep the
Taksks that represend a device as close as possible to the driver for the pysical device.



