---
title: Syskit-enabled Bundles
sort_info: 600
---

When using syskit, the bundles are first Roby applications. As such, the
description [of the file layout in a Roby application]({rock_api:
roby}/building/file_layout.html) applies.

This page will start by explaining how one turns a plain Roby application into a
syskit-enabled bundle. We will then summarize parts that are added in addition
to the Roby layout in a Roby application that uses syskit.

Creating Syskit-enabled Roby applications
-----------------------------------------

The bundles created in Rock are already syskit-enabled, i.e. if you do

~~~
rock-create-bundle mybundle
roby init
~~~

The resulting application is already using syskit.

However, if you wrote a "plain" Roby application and want to use syskit in it,
you should enable the syskit plugin *and* pick the temporal scheduler. Edit
config/init.rb and add:

~~~ ruby
Roby.app.using 'syskit'
require 'roby/schedulers/temporal'
Roby.scheduler = Roby::Schedulers::Temporal.new
~~~

Once you have done that, run

~~~
roby init
~~~

To add templates for syskit-specific directories and files.

Syskit-specific File Layout
---------------------------
This section deals with the parts of the file layout that are specific to
syskit. Refer to [this page]({rock_api: roby}/building/file_layout.html) for the
generic Roby parts

